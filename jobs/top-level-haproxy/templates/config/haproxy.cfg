global
  log 127.0.0.1 syslog info
  daemon
  user root
  group root
  maxconn <%= p('top-level-haproxy.max_conn').to_s %>
  spread-checks 4
  stats socket /var/vcap/sys/run/top-level-haproxy/haproxy.sock mode 600 level admin
  stats timeout 2m

defaults
  log global
  timeout connect <%= p('top-level-haproxy.timeout_connect').to_s %>
  timeout client <%= p('top-level-haproxy.timeout_client') %>
  timeout server <%= p('top-level-haproxy.timeout_server') %>

listen stats
  bind 0.0.0.0:<%= p('top-level-haproxy.admin_port').to_s %>
  mode http

  #This is the virtual URL to access the stats page
  stats uri /top-level-haproxy/stats

  #Authentication realm. This can be set to anything. Escape space characters with a backslash.
  stats realm HAProxy\ Statistics

  #The user/pass you want to use. Change this password!
  stats auth <%= p('top-level-haproxy.admin_user').to_s %>:<%=p('top-level-haproxy.admin_pass').to_s %>

  #This allows you to take down and bring up back end servers.
  #This will produce an error on older versions of HAProxy.
  stats admin if TRUE

  # SSL Ciphers: <%= p('ha_proxy.ssl_ciphers') %>

  frontend service_broker
    bind *:<%= p('rdpgd_manager.sb_port') %>
    mode http
    default_backend mc_nodes

  frontend mc_db_pg
    bind 0.0.0.0:7432
    mode tcp
    default_backend mc_nodes_tcp

  frontend pgbouncer
    bind 0.0.0.0:5432
    mode tcp
    default_backend global_pgbouncer_nodes

  frontend consul_servers
    bind *:8500
    mode http
    default_backend consul_server_nodes

  backend mc_nodes
    mode http
    <% p("top-level-haproxy.mc_nodes").each_with_index do |ip, index| %>
      <% if index == 0 %>
        server node<%= index %> <%= ip %>:<%= p('rdpgd_manager.sb_port') %> check
      <% else %>
        server node<%= index %> <%= ip %>:<%= p('rdpgd_manager.sb_port') %> check backup
      <% end %>
    <% end %>

  backend global_pgbouncer_nodes
    mode tcp
    <% p("top-level-haproxy.global_pgbouncer_nodes").each_with_index do |ip, index| %>
    server node<%= index %> <%= ip %>:6432 check
    <% end %>


  backend mc_nodes_tcp
    mode tcp
    <% p("top-level-haproxy.mc_nodes").each_with_index do |ip, index| %>
      <% if index == 0 %>
        server mc_node<%= index %> <%= ip %>:7432 check
      <% else %>
        server mc_node<%= index %> <%= ip %>:7432 check backup
      <% end %>
    <% end %>


  backend consul_server_nodes
    mode http
    <% p("top-level-haproxy.mc_nodes").each_with_index do |ip, index| %>
      <% if index == 0 %>
        server node<%= index %> <%= ip %>:8500 check
      <% else %>
        server node<%= index %> <%= ip %>:8500 check backup
      <% end %>
    <% end %>
